///////////////////////////////////////////////////////////////////////////////////////////////

#ifndef ASSIGNER_HPP
#define ASSIGNER_HPP

///////////////////////////////////////////////////////////////////////////////////////////////

#include "base.hpp"

#include "iassign.hpp"

///////////////////////////////////////////////////////////////////////////////////////////////

class Bosses;
class Teams;
//class Team;
class Members;

class IAssign;

///////////////////////////////////////////////////////////////////////////////////////////////

class Assigner
{
public:
    Assigner();

    void init();

    void assign();

    void writeback();

private:
    vector<Boss>&   m_bosses;
    vector<Team>&   m_teams;
    vector<Member>& m_members;

    // Contains cleaner
    vector<list<Team*>> m_teamsElements;

    unique_ptr<IAssign> m_assigner;

    void initAssignNaive(); // Move that to a builder/factory class

    void fillTeamElementLists(Member& member);
};

///////////////////////////////////////////////////////////////////////////////////////////////

#endif // ASSIGNER_HPP

///////////////////////////////////////////////////////////////////////////////////////////////
