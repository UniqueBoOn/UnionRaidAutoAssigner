///////////////////////////////////////////////////////////////////////////////////////////////

#ifndef ASSIGNER_HPP
#define ASSIGNER_HPP

///////////////////////////////////////////////////////////////////////////////////////////////

#include "base.hpp"

///////////////////////////////////////////////////////////////////////////////////////////////

class Bosses;
class Teams;
//class Team;
class Members;

///////////////////////////////////////////////////////////////////////////////////////////////

class Assigner
{
public:
    static Assigner& instance();

    void init();

    void assign();

    void writeback();

private:
    vector<Boss>&  m_bosses;
    vector<Team>&   m_teams;
    vector<Member>& m_members;

    // Contains cleaner
#if 0
    list<Team*> m_teamsElectric;
    list<Team*> m_teamsFire;
    list<Team*> m_teamsIron;
    list<Team*> m_teamsWater;
    list<Team*> m_teamsWind;
    list<Team*> m_teamsNeutral;
#endif
    vector<list<Team*>> m_teamsElements;

    Assigner();
    void removeConflictingTeams(Team& team);
    void fillTeamElementLists(Member& member);
};

///////////////////////////////////////////////////////////////////////////////////////////////

#endif // ASSIGNER_HPP

///////////////////////////////////////////////////////////////////////////////////////////////
